# -*- mode: ruby -*-
# vi: set ft=ruby :

$apt = <<SCRIPT
echo -e '\033[33m INSTALANDO PACOTES DEBIAN \033[m'
sudo apt-get install htop -y
echo "-------------------------------------"
echo "pacote: git..."
sudo apt-get install git -y
echo "-------------------------------------"
echo "pacote: curl..."
sudo apt-get install curl -y
sudo apt-get install gnupg1-curl -y
echo "-------------------------------------"
echo "pacote: vim..."
sudo apt-get install vim -y
echo "-------------------------------------"
echo "atualizando certificado..."
sudo apt-get install --reinstall ca-certificates -y
echo -e '\033[34m --------------------------------------- \033[m'
echo -e '\033[34m PROCESSO FINALIZADO \033[m'
SCRIPT

$phpRepository = <<SCRIPT
echo -e '\033[33m CONFIGURANDO REPOSITORIO PHP \033[m'
sudo apt install ca-certificates apt-transport-https -y
wget -q https://packages.sury.org/php/apt.gpg -O- | sudo apt-key add -
echo "deb https://packages.sury.org/php/ stretch main" | sudo tee /etc/apt/sources.list.d/php.list
sudo apt-get update
echo -e '\033[34m PROCESSO FINALIZADO \033[m'
SCRIPT

$php = <<SCRIPT
echo -e '\033[33m INSTALANDO PHP \033[m'
sudo apt install php7.1 -y
sudo apt install php7.1-cli -y
sudo apt install php7.1-common -y
sudo apt install php7.1-curl -y
sudo apt install php7.1-mbstring  -y
sudo apt install php7.1-mysql -y
sudo apt install php7.1-xml -y
sudo apt install php7.1-pgsql -y
sudo apt install php7.1-json -y
sudo apt install php7.1-zip -y
echo -e '\033[34m PROCESSO FINALIZADO \033[m'
SCRIPT

$composer = <<SCRIPT
echo -e '\033[33m INSTALANDO COMPOSER \033[m'
EXPECTED_SIGNATURE="$(wget -q -O - https://composer.github.io/installer.sig)"
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
ACTUAL_SIGNATURE="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"

if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ]
then
    >&2 echo 'ERROR: Invalid installer signature'
    rm composer-setup.php
    exit 1
fi

php composer-setup.php --quiet --install-dir=/usr/local/bin --filename=composer
RESULT=$?
rm composer-setup.php
echo -e '\033[34m PROCESSO FINALIZADO \033[m'
exit $RESULT
SCRIPT

$laravelInstaller = <<SCRIPT
echo -e '\033[33m INSTALANDO LARAVEL INSTALLER \033[m'
composer global require laravel/installer
echo -e '\033[34m PROCESSO FINALIZADO \033[m'
SCRIPT

$laravelInstLinkSymbol = <<SCRIPT
echo -e '\033[33m CRIANDO LINK SIMBOLICO LARAVEL INSTALLER \033[m'
sudo ln -s /home/vagrant/.config/composer/vendor/bin/laravel /usr/local/bin/laravel
echo -e '\033[34m PROCESSO FINALIZADO \033[m'
SCRIPT

Vagrant.configure("2") do |config|
    config.vm.define "laravel"
    config.vm.box = "generic/debian9"
    config.vm.host_name = "laravel"
    config.vm.network :private_network, ip: "192.168.1.200"
    config.vm.post_up_message

    config.vm.synced_folder "/home/paulobalzi/devel/estudo/laravel/code", "/home/vagrant/devel"

    config.vm.provider "virtualbox" do |vb|
        vb.name = "laravel"
        vb.gui = false
        vb.memory = 1024
        vb.cpus = 1
    end

    config.vm.provision "apt", keep_color: false,  type: "shell", preserve_order: true, inline: $apt
    config.vm.provision "phpRepository", keep_color: false,  type: "shell", preserve_order: true, inline: $phpRepository
    config.vm.provision "php", keep_color: false,  type: "shell", preserve_order: true, inline: $php
    config.vm.provision "composer", keep_color: false,  type: "shell", preserve_order: true, inline: $composer
    config.vm.provision "laravelInstaller",
        keep_color: false,
        type: "shell",
        preserve_order: true,
        inline: $laravelInstaller,
        privileged: false
    config.vm.provision "laravelInstLinkSymbol",
        keep_color: false,
        type: "shell",
        preserve_order: true,
        inline: $laravelInstLinkSymbol
end
